{"info":{"type":"runner","start":"2025-08-15T01:12:51.570Z","end":"2025-08-15T01:13:19.620Z","_duration":28050,"cid":"0-2","capabilities":{"acceptInsecureCerts":true,"browserName":"chrome","browserVersion":"139.0.7258.66","chrome":{"chromedriverVersion":"139.0.7258.68 (40ff94600b6ed9fa7778a3a2566f254ad85f2147-refs/branch-heads/7258@{#2228})","userDataDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp\\scoped_dir3920_573569040"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:50169"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"cf2718b10ea62a04ae6a2298aee27549"},"sanitizedCapabilities":"chrome.139_0_7258_66.windows","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]},"specs":["file:///C:/Docs/Projetos/qa.automationexercise-web.webdriverio/test/specs/register-user.spec.js"],"sessionId":"cf2718b10ea62a04ae6a2298aee27549","isMultiremote":false,"instanceOptions":{"cf2718b10ea62a04ae6a2298aee27549":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":1,"skipped":0,"failed":0,"duration":28050,"start":"2025-08-15T01:12:51.571Z","end":"2025-08-15T01:13:19Z"},"title":"Resultados WebdriverIO","suites":[{"type":"suite:start","start":"2025-08-15T01:12:51.576Z","end":"2025-08-15T01:13:19.588Z","_duration":28011,"uid":"suite-0-0","cid":"0-2","file":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\test\\specs\\register-user.spec.js","title":"User Registration","fullTitle":"User Registration","tests":[{"type":"test","start":"2025-08-15T01:12:51.576Z","end":"2025-08-15T01:13:19.586Z","_duration":28010,"uid":"test-00-0","cid":"0-2","title":"Test Case 1: Register User","fullTitle":"User Registration.Test Case 1: Register User","output":[],"retries":0,"parent":"User Registration","state":"passed","body":"async () => {\r\n        // Generate random user data\r\n        const userData = generateRandomUser();\r\n\r\n        // 1. Launch browser and navigate to url 'http://automationexercise.com'\r\n        await homePage.open();\r\n\r\n        // Verify home page is visible\r\n        const title = await browser.getTitle();\r\n        expect(title).to.include('Automation Exercise');\r\n\r\n        // 2. Click on 'Signup / Login' button\r\n        await homePage.clickSignupLogin();\r\n\r\n        // 3. Verify 'New User Signup!' is visible\r\n        expect(await signupPage.isNewUserSignupVisible()).to.be.true;\r\n\r\n        // 4. Enter name and email address\r\n        await signupPage.enterSignupDetails(userData.name, userData.email);\r\n\r\n        // 5. Click 'Signup' button\r\n        await signupPage.clickSignupButton();\r\n\r\n        // 6. Verify that 'ENTER ACCOUNT INFORMATION' is visible\r\n        expect(await signupPage.isEnterAccountInfoVisible()).to.be.true;\r\n\r\n        // 7. Fill details: Title, Name, Email, Password, Date of birth\r\n        await signupPage.fillAccountDetails({\r\n            title: userData.title,\r\n            password: userData.password,\r\n            dayOfBirth: userData.dayOfBirth,\r\n            monthOfBirth: userData.monthOfBirth,\r\n            yearOfBirth: userData.yearOfBirth\r\n        });\r\n\r\n        // 8. Select checkbox 'Sign up for our newsletter!'\r\n        await signupPage.checkNewsletterSignup();\r\n\r\n        // 9. Select checkbox 'Receive special offers from our partners!'\r\n        await signupPage.checkSpecialOffers();\r\n\r\n        // 10. Fill details: First name, Last name, Company, Address, Address2, Country, State, City, Zipcode, Mobile Number\r\n        await signupPage.fillAddressDetails({\r\n            firstName: userData.firstName,\r\n            lastName: userData.lastName,\r\n            company: userData.company,\r\n            address1: userData.address1,\r\n            address2: userData.address2,\r\n            country: userData.country,\r\n            state: userData.state,\r\n            city: userData.city,\r\n            zipcode: userData.zipcode,\r\n            mobileNumber: userData.mobileNumber\r\n        });\r\n\r\n        // 11. Click 'Create Account button'\r\n        await signupPage.clickCreateAccountButton();\r\n\r\n        // 12. Verify that 'ACCOUNT CREATED!' is visible\r\n        expect(await accountCreatedPage.isAccountCreatedVisible()).to.be.true;\r\n\r\n        // 13. Click 'Continue' button\r\n        await accountCreatedPage.clickContinueButton();\r\n\r\n        // 14. Verify that 'Logged in as username' is visible\r\n        expect(await homePage.verifyUserLoggedIn()).to.be.true;\r\n        const username = await homePage.getLoggedInUsername();\r\n        expect(username).to.equal(userData.name);\r\n\r\n        // 15. Click 'Delete Account' button\r\n        await homePage.clickDeleteAccount();\r\n\r\n        // 16. Verify that 'ACCOUNT DELETED!' is visible and click 'Continue' button\r\n        expect(await accountCreatedPage.isAccountDeletedVisible()).to.be.true;\r\n        await accountCreatedPage.clickContinueButton();\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2025-08-15T01:12:51.576Z","end":"2025-08-15T01:13:19.586Z","_duration":28010,"uid":"test-00-0","cid":"0-2","title":"Test Case 1: Register User","fullTitle":"User Registration.Test Case 1: Register User","output":[],"retries":0,"parent":"User Registration","state":"passed","body":"async () => {\r\n        // Generate random user data\r\n        const userData = generateRandomUser();\r\n\r\n        // 1. Launch browser and navigate to url 'http://automationexercise.com'\r\n        await homePage.open();\r\n\r\n        // Verify home page is visible\r\n        const title = await browser.getTitle();\r\n        expect(title).to.include('Automation Exercise');\r\n\r\n        // 2. Click on 'Signup / Login' button\r\n        await homePage.clickSignupLogin();\r\n\r\n        // 3. Verify 'New User Signup!' is visible\r\n        expect(await signupPage.isNewUserSignupVisible()).to.be.true;\r\n\r\n        // 4. Enter name and email address\r\n        await signupPage.enterSignupDetails(userData.name, userData.email);\r\n\r\n        // 5. Click 'Signup' button\r\n        await signupPage.clickSignupButton();\r\n\r\n        // 6. Verify that 'ENTER ACCOUNT INFORMATION' is visible\r\n        expect(await signupPage.isEnterAccountInfoVisible()).to.be.true;\r\n\r\n        // 7. Fill details: Title, Name, Email, Password, Date of birth\r\n        await signupPage.fillAccountDetails({\r\n            title: userData.title,\r\n            password: userData.password,\r\n            dayOfBirth: userData.dayOfBirth,\r\n            monthOfBirth: userData.monthOfBirth,\r\n            yearOfBirth: userData.yearOfBirth\r\n        });\r\n\r\n        // 8. Select checkbox 'Sign up for our newsletter!'\r\n        await signupPage.checkNewsletterSignup();\r\n\r\n        // 9. Select checkbox 'Receive special offers from our partners!'\r\n        await signupPage.checkSpecialOffers();\r\n\r\n        // 10. Fill details: First name, Last name, Company, Address, Address2, Country, State, City, Zipcode, Mobile Number\r\n        await signupPage.fillAddressDetails({\r\n            firstName: userData.firstName,\r\n            lastName: userData.lastName,\r\n            company: userData.company,\r\n            address1: userData.address1,\r\n            address2: userData.address2,\r\n            country: userData.country,\r\n            state: userData.state,\r\n            city: userData.city,\r\n            zipcode: userData.zipcode,\r\n            mobileNumber: userData.mobileNumber\r\n        });\r\n\r\n        // 11. Click 'Create Account button'\r\n        await signupPage.clickCreateAccountButton();\r\n\r\n        // 12. Verify that 'ACCOUNT CREATED!' is visible\r\n        expect(await accountCreatedPage.isAccountCreatedVisible()).to.be.true;\r\n\r\n        // 13. Click 'Continue' button\r\n        await accountCreatedPage.clickContinueButton();\r\n\r\n        // 14. Verify that 'Logged in as username' is visible\r\n        expect(await homePage.verifyUserLoggedIn()).to.be.true;\r\n        const username = await homePage.getLoggedInUsername();\r\n        expect(username).to.equal(userData.name);\r\n\r\n        // 15. Click 'Delete Account' button\r\n        await homePage.clickDeleteAccount();\r\n\r\n        // 16. Verify that 'ACCOUNT DELETED!' is visible and click 'Continue' button\r\n        expect(await accountCreatedPage.isAccountDeletedVisible()).to.be.true;\r\n        await accountCreatedPage.clickContinueButton();\r\n    }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\reports\\html\\report-0-2.html","browserName":"not specified"}