{"info":{"type":"runner","start":"2025-08-15T13:53:45.018Z","end":"2025-08-15T13:53:51.146Z","_duration":6128,"cid":"0-0","capabilities":{"acceptInsecureCerts":true,"browserName":"chrome","browserVersion":"139.0.7258.66","chrome":{"chromedriverVersion":"139.0.7258.68 (40ff94600b6ed9fa7778a3a2566f254ad85f2147-refs/branch-heads/7258@{#2228})","userDataDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp\\scoped_dir3112_1123142668"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:49342"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"a8df9d87d2ecfa82b0f1326df62ae1ca"},"sanitizedCapabilities":"chrome.139_0_7258_66.windows","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":["--headless","--disable-gpu","--window-size=1920,1080"]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":["--headless","--disable-gpu","--window-size=1920,1080"]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"headless":true,"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]},"specs":["file:///C:/Docs/Projetos/qa.automationexercise-web.webdriverio/test/specs/createAndDeleteUser.spec.js"],"sessionId":"a8df9d87d2ecfa82b0f1326df62ae1ca","isMultiremote":false,"instanceOptions":{"a8df9d87d2ecfa82b0f1326df62ae1ca":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":["--headless","--disable-gpu","--window-size=1920,1080"]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":["--headless","--disable-gpu","--window-size=1920,1080"]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"headless":true,"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":1,"skipped":0,"failed":0,"duration":6128,"start":"2025-08-15T13:53:45.018Z","end":"2025-08-15T13:53:51Z"},"title":"Resultados WebdriverIO","suites":[{"type":"suite:start","start":"2025-08-15T13:53:45.021Z","end":"2025-08-15T13:53:51.120Z","_duration":6099,"uid":"suite-0-0","cid":"0-0","file":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\test\\specs\\createAndDeleteUser.spec.js","title":"Register a user","fullTitle":"Register a user","tests":[{"type":"test","start":"2025-08-15T13:53:45.022Z","end":"2025-08-15T13:53:51.119Z","_duration":6097,"uid":"test-00-0","cid":"0-0","title":"Test Case 1: Registrar um usuário","fullTitle":"Register a user.Test Case 1: Registrar um usuário","output":[],"retries":0,"parent":"Register a user","state":"passed","body":"async () => {\r\n        // 1. Abrir o navegador e Navegar para a URL 'http://automationexercise.com'\r\n        const baseUrl = new BaseUrl();\r\n        await baseUrl.open();\r\n\r\n        //Clicar no botão 'Signup / Login'\r\n        await clickable.signupLogin.click();\r\n\r\n        //Inserir nome e endereço de e-mail\r\n        await inputForms.signupInputName.setValue(genericData.name);\r\n        await inputForms.signupInputEmail.setValue(genericData.email);\r\n\r\n        //Clicar no botão 'Signup'\r\n        await clickable.signupButton.click();\r\n\r\n        // Preencher os detalhes: Título, Nome, \r\n        await clickable.titleMr.click();\r\n        await inputForms.enterAccountInputName.setValue(genericData.name);\r\n        \r\n        // Validar que o email já está preenchido corretamente (não precisa preencher novamente)\r\n        const emailValue = await inputForms.enterAccountInputEmail.getValue();\r\n        expect(emailValue).to.equal(genericData.email);\r\n        \r\n        await inputForms.enterAccountInputpassword.setValue(genericData.password);\r\n        \r\n        // Selecionar data de nascimento usando scroll\r\n        await clickable.daysBirthScroll.selectByVisibleText(genericData.dayOfBirth);\r\n        await clickable.monthBirthScroll.selectByVisibleText(genericData.monthOfBirth);\r\n        await clickable.yearsBirthScroll.selectByVisibleText(genericData.yearOfBirth);\r\n\r\n        //Selecionar a caixa de seleção 'Sign up for our newsletter!'\r\n        await clickable.newsletterCheckbox.click();\r\n\r\n        //Selecionar a caixa de seleção 'Receive special offers from our partners!'\r\n        await clickable.specialOffersCheckbox.click();\r\n\r\n        //Preencher os detalhes: Nome, Sobrenome, Empresa, Endereço, Endereço 2, Cidade, Estado, Código postal, Número de telefone\r\n        await inputForms.adressInformationfirstName.setValue(genericData.firstName);\r\n        await inputForms.adressInformationlastName.setValue(genericData.lastName);\r\n        await inputForms.adressInformationcompany.setValue(genericData.company);\r\n        await inputForms.mainAdress.setValue(genericData.address1);\r\n        await inputForms.secondAdress.setValue(genericData.address2);\r\n        await inputForms.city.setValue(genericData.city);\r\n\r\n\r\n        //País, Estado, Cidade, CEP, Número do celular\r\n        await clickable.countryScroll.selectByVisibleText(genericData.country);\r\n        await inputForms.state.setValue(genericData.state);\r\n        await inputForms.city.setValue(genericData.city);\r\n        await inputForms.zipcode.setValue(genericData.zipcode);\r\n        await inputForms.mobileNumber.setValue(genericData.mobileNumber);\r\n\r\n        //Clicar no botão 'Create Account'\r\n        await clickable.createAccountButton.click();\r\n\r\n        //Clicar no botão 'Continue'\r\n        await clickable.continueButton.click();\r\n\r\n        //Clicar no botão 'Delete Account'\r\n        await clickable.deleteAccountLink.click();\r\n\r\n        //Verifique se 'ACCOUNT DELETED!' é visível e clicar no botão 'Continue'\r\n        expect(await alertMessages.showAccountDeleted()).to.be.true;\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2025-08-15T13:53:45.022Z","end":"2025-08-15T13:53:51.119Z","_duration":6097,"uid":"test-00-0","cid":"0-0","title":"Test Case 1: Registrar um usuário","fullTitle":"Register a user.Test Case 1: Registrar um usuário","output":[],"retries":0,"parent":"Register a user","state":"passed","body":"async () => {\r\n        // 1. Abrir o navegador e Navegar para a URL 'http://automationexercise.com'\r\n        const baseUrl = new BaseUrl();\r\n        await baseUrl.open();\r\n\r\n        //Clicar no botão 'Signup / Login'\r\n        await clickable.signupLogin.click();\r\n\r\n        //Inserir nome e endereço de e-mail\r\n        await inputForms.signupInputName.setValue(genericData.name);\r\n        await inputForms.signupInputEmail.setValue(genericData.email);\r\n\r\n        //Clicar no botão 'Signup'\r\n        await clickable.signupButton.click();\r\n\r\n        // Preencher os detalhes: Título, Nome, \r\n        await clickable.titleMr.click();\r\n        await inputForms.enterAccountInputName.setValue(genericData.name);\r\n        \r\n        // Validar que o email já está preenchido corretamente (não precisa preencher novamente)\r\n        const emailValue = await inputForms.enterAccountInputEmail.getValue();\r\n        expect(emailValue).to.equal(genericData.email);\r\n        \r\n        await inputForms.enterAccountInputpassword.setValue(genericData.password);\r\n        \r\n        // Selecionar data de nascimento usando scroll\r\n        await clickable.daysBirthScroll.selectByVisibleText(genericData.dayOfBirth);\r\n        await clickable.monthBirthScroll.selectByVisibleText(genericData.monthOfBirth);\r\n        await clickable.yearsBirthScroll.selectByVisibleText(genericData.yearOfBirth);\r\n\r\n        //Selecionar a caixa de seleção 'Sign up for our newsletter!'\r\n        await clickable.newsletterCheckbox.click();\r\n\r\n        //Selecionar a caixa de seleção 'Receive special offers from our partners!'\r\n        await clickable.specialOffersCheckbox.click();\r\n\r\n        //Preencher os detalhes: Nome, Sobrenome, Empresa, Endereço, Endereço 2, Cidade, Estado, Código postal, Número de telefone\r\n        await inputForms.adressInformationfirstName.setValue(genericData.firstName);\r\n        await inputForms.adressInformationlastName.setValue(genericData.lastName);\r\n        await inputForms.adressInformationcompany.setValue(genericData.company);\r\n        await inputForms.mainAdress.setValue(genericData.address1);\r\n        await inputForms.secondAdress.setValue(genericData.address2);\r\n        await inputForms.city.setValue(genericData.city);\r\n\r\n\r\n        //País, Estado, Cidade, CEP, Número do celular\r\n        await clickable.countryScroll.selectByVisibleText(genericData.country);\r\n        await inputForms.state.setValue(genericData.state);\r\n        await inputForms.city.setValue(genericData.city);\r\n        await inputForms.zipcode.setValue(genericData.zipcode);\r\n        await inputForms.mobileNumber.setValue(genericData.mobileNumber);\r\n\r\n        //Clicar no botão 'Create Account'\r\n        await clickable.createAccountButton.click();\r\n\r\n        //Clicar no botão 'Continue'\r\n        await clickable.continueButton.click();\r\n\r\n        //Clicar no botão 'Delete Account'\r\n        await clickable.deleteAccountLink.click();\r\n\r\n        //Verifique se 'ACCOUNT DELETED!' é visível e clicar no botão 'Continue'\r\n        expect(await alertMessages.showAccountDeleted()).to.be.true;\r\n    }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\reports\\html\\report-0-0.html","browserName":"not specified"}