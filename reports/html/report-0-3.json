{"info":{"type":"runner","start":"2025-08-15T01:12:51.539Z","end":"2025-08-15T01:13:12.892Z","_duration":21353,"cid":"0-3","capabilities":{"acceptInsecureCerts":true,"browserName":"chrome","browserVersion":"139.0.7258.66","chrome":{"chromedriverVersion":"139.0.7258.68 (40ff94600b6ed9fa7778a3a2566f254ad85f2147-refs/branch-heads/7258@{#2228})","userDataDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp\\scoped_dir3920_1271889153"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:50166"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true,"sessionId":"08bc6a69f47f8a9ebc2e1206f3052af7"},"sanitizedCapabilities":"chrome.139_0_7258_66.windows","config":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]},"specs":["file:///C:/Docs/Projetos/qa.automationexercise-web.webdriverio/test/specs/remove-from-cart.spec.js"],"sessionId":"08bc6a69f47f8a9ebc2e1206f3052af7","isMultiremote":false,"instanceOptions":{"08bc6a69f47f8a9ebc2e1206f3052af7":{"protocol":"http","hostname":"localhost","port":9515,"path":"/","capabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"logLevel":"info","connectionRetryTimeout":120000,"connectionRetryCount":3,"logLevels":{},"enableDirectConnect":true,"strictSSL":true,"cacheDir":"C:\\Users\\Kitoy\\AppData\\Local\\Temp","requestedCapabilities":{"browserName":"chrome","acceptInsecureCerts":true,"goog:chromeOptions":{"args":[]}},"automationProtocol":"webdriver","baseUrl":"https://automationexercise.com","waitforInterval":500,"waitforTimeout":10000,"onReload":[],"beforeCommand":[],"afterCommand":[],"rootDir":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio","specs":["./test/specs/**/*.js"],"suites":{},"exclude":[],"groupLogsByTestSpec":false,"excludeDriverLogs":[],"bail":0,"framework":"mocha","reporters":["spec",["html-nice",{"outputDir":"./reports/html","filename":"report.html","reportTitle":"Resultados WebdriverIO","linkScreenshots":true,"showInBrowser":false,"collapseTests":false,"useOnAfterCommandForScreenshot":true}]],"services":["chromedriver"],"maxInstances":5,"maxInstancesPerCapability":100,"injectGlobals":true,"filesToWatch":[],"execArgv":[],"runnerEnv":{},"runner":"local","shard":{"current":1,"total":1},"specFileRetries":0,"specFileRetriesDelay":0,"specFileRetriesDeferred":false,"reporterSyncInterval":100,"reporterSyncTimeout":5000,"cucumberFeaturesWithLineNumbers":[],"autoCompileOpts":{"autoCompile":true,"tsNodeOpts":{"transpileOnly":true},"babelOpts":{}},"mochaOpts":{"timeout":60000,"ui":"bdd"},"jasmineOpts":{"defaultTimeoutInterval":10000},"cucumberOpts":{"timeout":10000},"onPrepare":[],"onWorkerStart":[],"onWorkerEnd":[],"before":[],"beforeSession":[],"beforeSuite":[],"beforeHook":[],"beforeTest":[null,null],"afterTest":[null],"afterHook":[],"afterSuite":[],"afterSession":[],"after":[null],"onComplete":[],"beforeAssertion":[],"afterAssertion":[],"beforeFeature":[],"beforeScenario":[],"beforeStep":[],"afterStep":[],"afterScenario":[],"afterFeature":[],"_":["run","run"],"$0":"node_modules\\@wdio\\cli\\bin\\wdio.js","config-path":"wdio.conf.js","ignoredWorkerServices":[]}},"retry":0,"failures":0,"retries":0},"metrics":{"passed":1,"skipped":0,"failed":0,"duration":21353,"start":"2025-08-15T01:12:51.540Z","end":"2025-08-15T01:13:12Z"},"title":"Resultados WebdriverIO","suites":[{"type":"suite:start","start":"2025-08-15T01:12:51.544Z","end":"2025-08-15T01:13:12.862Z","_duration":21318,"uid":"suite-0-0","cid":"0-3","file":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\test\\specs\\remove-from-cart.spec.js","title":"Remove Products From Cart","fullTitle":"Remove Products From Cart","tests":[{"type":"test","start":"2025-08-15T01:12:51.545Z","end":"2025-08-15T01:13:12.861Z","_duration":21316,"uid":"test-00-0","cid":"0-3","title":"Test Case 17: Remove Products From Cart","fullTitle":"Remove Products From Cart.Test Case 17: Remove Products From Cart","output":[],"retries":0,"parent":"Remove Products From Cart","state":"passed","body":"async () => {\r\n        // 1. Launch browser and navigate to url 'http://automationexercise.com'\r\n        await homePage.open();\r\n\r\n        // Verify home page is visible\r\n        const title = await browser.getTitle();\r\n        expect(title).to.include('Automation Exercise');\r\n\r\n        // 2. Click 'Products' button\r\n        await homePage.clickProducts();\r\n\r\n        // 3. Add products to cart\r\n        const productName = await productsPage.getProductNameByIndex(productData.firstProductIndex);\r\n        await productsPage.addProductToCart(productData.firstProductIndex);\r\n\r\n        // 4. Click 'View Cart' button\r\n        await productsPage.viewCart();\r\n\r\n        // 5. Verify that products are visible in cart\r\n        const isProductInCart = await cartPage.verifyProductInCart(productName);\r\n        expect(isProductInCart).to.be.true;\r\n\r\n        // Store number of products before deletion\r\n        const initialNumberOfProducts = await cartPage.getNumberOfProducts();\r\n        expect(initialNumberOfProducts).to.be.greaterThan(0);\r\n\r\n        // 6. Click 'X' button corresponding to particular product\r\n        await cartPage.deleteProduct(0);\r\n\r\n        // 7. Verify that product is removed from the cart\r\n        const finalNumberOfProducts = await cartPage.getNumberOfProducts();\r\n\r\n        if (initialNumberOfProducts === 1) {\r\n            const isCartEmpty = await cartPage.isCartEmpty();\r\n            expect(isCartEmpty).to.be.true;\r\n        } else {\r\n            expect(finalNumberOfProducts).to.equal(initialNumberOfProducts - 1);\r\n            const isProductStillInCart = await cartPage.verifyProductInCart(productName);\r\n            expect(isProductStillInCart).to.be.false;\r\n        }\r\n    }","events":[],"errorIndex":0}],"hooks":[],"suites":[],"parent":"","hooksAndTests":[{"type":"test","start":"2025-08-15T01:12:51.545Z","end":"2025-08-15T01:13:12.861Z","_duration":21316,"uid":"test-00-0","cid":"0-3","title":"Test Case 17: Remove Products From Cart","fullTitle":"Remove Products From Cart.Test Case 17: Remove Products From Cart","output":[],"retries":0,"parent":"Remove Products From Cart","state":"passed","body":"async () => {\r\n        // 1. Launch browser and navigate to url 'http://automationexercise.com'\r\n        await homePage.open();\r\n\r\n        // Verify home page is visible\r\n        const title = await browser.getTitle();\r\n        expect(title).to.include('Automation Exercise');\r\n\r\n        // 2. Click 'Products' button\r\n        await homePage.clickProducts();\r\n\r\n        // 3. Add products to cart\r\n        const productName = await productsPage.getProductNameByIndex(productData.firstProductIndex);\r\n        await productsPage.addProductToCart(productData.firstProductIndex);\r\n\r\n        // 4. Click 'View Cart' button\r\n        await productsPage.viewCart();\r\n\r\n        // 5. Verify that products are visible in cart\r\n        const isProductInCart = await cartPage.verifyProductInCart(productName);\r\n        expect(isProductInCart).to.be.true;\r\n\r\n        // Store number of products before deletion\r\n        const initialNumberOfProducts = await cartPage.getNumberOfProducts();\r\n        expect(initialNumberOfProducts).to.be.greaterThan(0);\r\n\r\n        // 6. Click 'X' button corresponding to particular product\r\n        await cartPage.deleteProduct(0);\r\n\r\n        // 7. Verify that product is removed from the cart\r\n        const finalNumberOfProducts = await cartPage.getNumberOfProducts();\r\n\r\n        if (initialNumberOfProducts === 1) {\r\n            const isCartEmpty = await cartPage.isCartEmpty();\r\n            expect(isCartEmpty).to.be.true;\r\n        } else {\r\n            expect(finalNumberOfProducts).to.equal(initialNumberOfProducts - 1);\r\n            const isProductStillInCart = await cartPage.verifyProductInCart(productName);\r\n            expect(isProductStillInCart).to.be.false;\r\n        }\r\n    }","events":[],"errorIndex":0}]}],"reportFile":"C:\\Docs\\Projetos\\qa.automationexercise-web.webdriverio\\reports\\html\\report-0-3.html","browserName":"not specified"}